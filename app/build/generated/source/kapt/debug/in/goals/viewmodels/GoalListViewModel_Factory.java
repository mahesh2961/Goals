// Generated by Dagger (https://google.github.io/dagger).
package in.goals.viewmodels;

import dagger.internal.Factory;
import in.goals.database.GoalRepository;
import javax.inject.Provider;

public final class GoalListViewModel_Factory implements Factory<GoalListViewModel> {
  private final Provider<GoalRepository> goalRepositoryProvider;

  public GoalListViewModel_Factory(Provider<GoalRepository> goalRepositoryProvider) {
    this.goalRepositoryProvider = goalRepositoryProvider;
  }

  @Override
  public GoalListViewModel get() {
    return provideInstance(goalRepositoryProvider);
  }

  public static GoalListViewModel provideInstance(Provider<GoalRepository> goalRepositoryProvider) {
    return new GoalListViewModel(goalRepositoryProvider.get());
  }

  public static GoalListViewModel_Factory create(Provider<GoalRepository> goalRepositoryProvider) {
    return new GoalListViewModel_Factory(goalRepositoryProvider);
  }

  public static GoalListViewModel newGoalListViewModel(GoalRepository goalRepository) {
    return new GoalListViewModel(goalRepository);
  }
}
